plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = "2.24.0"
    aspectJVersion = "1.9.20.1"
    seleniumVersion = "4.34.0"
    testngVersion = "7.11.0"
    appiumVersion = "9.5.0"
    lombokVersion = "1.18.28"
    slf4jVersion = "2.0.9"
    logbackVersion = "1.5.18"

    smokeAndroidSuite = 'src/test/resources/suites/smoke_android.xml'
    regressionAndroidSuite = 'src/test/resources/suites/regression_android.xml'
    allWaySuite = 'src/test/resources/suites/all_way.xml'
}

// Define configuration for AspectJ agent
configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    // Appium + Selenium + TestNG
    implementation "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    implementation "org.testng:testng:$testngVersion"
    implementation "io.appium:java-client:$appiumVersion"

    // Lombok
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    // Logging
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"

    // Allure
    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-testng"

    // AspectJ Weaver
    agent "org.aspectj:aspectjweaver:$aspectJVersion"
}

test {
    useTestNG()
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}

// smoke_android task
tasks.register('smoke_android', Test) {
    useTestNG {
        suites smokeAndroidSuite
    }

    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    outputs.upToDateWhen { false }
    finalizedBy 'allureReport'
}


// regression_android task
tasks.register('regression_android', Test) {
    useTestNG {
        suites regressionAndroidSuite
    }

    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    outputs.upToDateWhen { false }
    finalizedBy 'allureReport'
}

// all the way Reg-del task
tasks.register('all_way', Test) {
    useTestNG {
        suites allWaySuite
    }

    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    outputs.upToDateWhen { false }
    finalizedBy 'allureReport'
}
